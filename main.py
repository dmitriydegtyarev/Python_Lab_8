# Початок коду студента групи КНдн-35с Дігтярьова Дмитра Вікторовича (в групі 1 студент)

students = {
    "Іваненко Іван Іванович": {
        "Група": 101,
        "Курс": 2,
        "Оцінки": {"Програмування мовою Python": 85, "Моделювання систем": 78},
        "Стать": 'чоловік',
        "Допуск до сесії": 'так'
    },
    "Петров Петро Петрович": {
        "Група": 102,
        "Курс": 3,
        "Оцінки": {"Програмування мовою Python": 90, "Моделювання систем": 82},
        "Стать": 'чоловік',
        "Допуск до сесії": 'ні'
    },
    "Сидоренко Марія Олександрівна": {
        "Група": 101,
        "Курс": 2,
        "Оцінки": {"Програмування мовою Python": 88, "Моделювання систем": 76},
        "Стать": 'жінка',
        "Допуск до сесії": 'так'
    },
    "Кумша Олег Васильович": {
        "Група": 103,
        "Курс": 1,
        "Оцінки": {"Програмування мовою Python": 80, "Моделювання систем": 85},
        "Стать": 'чоловік',
        "Допуск до сесії": 'ні'
    },
    "Недозименко Андрій Павлович": {
        "Група": 102,
        "Курс": 3,
        "Оцінки": {"Програмування мовою Python": 86, "Моделювання систем": 80},
        "Стать": 'чоловік',
        "Допуск до сесії": 'так'
    },
    "Кирилко Володимир Вікторович": {
        "Група": 101,
        "Курс": 2,
        "Оцінки": {"Програмування мовою Python": 83, "Моделювання систем": 77},
        "Стать": 'чоловік',
        "Допуск до сесії": 'так'
    },
    "Бухтіяров Сергій Олександрович": {
        "Група": 103,
        "Курс": 1,
        "Оцінки": {"Програмування мовою Python": 81, "Моделювання систем": 79},
        "Стать": 'чоловік',
        "Допуск до сесії": 'так'
    },
    "Волок Дмитро Ігорович": {
        "Група": 101,
        "Курс": 2,
        "Оцінки": {"Програмування мовою Python": 87, "Моделювання систем": 81},
        "Стать": 'чоловік',
        "Допуск до сесії": 'так'
    }
}

# Виведення списку всіх студентів
def display_students():
    for name, info in students.items():
        print(f"{name} | Група {info['Група']} | Курс {info['Курс']} | Оцінки: {info['Оцінки']} | Стать: {info['Стать']} | Допуск до сесії: {info['Допуск до сесії']}")

# Додавання студента
def add_student(name, group, course, grades, gender, admission):
    students[name] = {"Група": group, "Курс": course, "Оцінки": grades, "Стать": gender, "Допуск до сесії": admission}
    print(f"Додано студента {name}.")

# Видалення студента
def remove_student(pib):
    if pib in students:
        del students[pib]
        print(f"Студента {pib} успішно видалено.")
    else:
        print("Помилка: студент із таким ПІБ не знайдений.")

# Сортування студентів за номером групи
def sort_students_by_group():
    sorted_list = sorted(students.items(), key=lambda x: x[1]["Група"])
    for name, info in sorted_list:
        print(f"{name} | Група {info['Група']} | Курс {info['Курс']} | Оцінки: {info['Оцінки']}")

# Перевірка на введення коректного числового значення
def get_int_input(prompt):
    while True:
        try:
            return int(input(prompt))
        except ValueError:
            print("Введіть коректне числове значення.")

# Перевірка на доступність варіанту
def get_choice(prompt, choices):
    while True:
        choice = input(prompt).strip().lower()
        if choice in choices:
            return choice
        print(f"Некоректний ввід. Введіть одне з наступних значень: {', '.join(choices)}")

# Перевірка коректності введеної дисципліни та оцінки
def get_grades():
    grades = {}
    print("Введіть оцінки (назва предмета та бал). Для завершення введіть 'exit'.")
    while True:
        subject = input("Назва предмета: ").strip()
        if subject.lower() == "exit":
            break
        score = get_int_input("Оцінка: ")
        grades[subject] = score
    return grades

while True:
    print("\nМеню:"
          "\n1 -> Вивести список студентів"
          "\n2 -> Додати нового студента"
          "\n3 -> Відсортувати студентів за групами"
          "\n4 -> Видалити студента"
          "\n5 -> Вийти")

    choice = input("Ваш вибір:\n")

    if choice == "1":
        display_students()

    elif choice == "2":
        name = input("Введіть прізвище, ім'я та по батькові студента: ")

        group = get_int_input("Введіть номер групи: ")

        course = get_int_input("Введіть курс: ")

        grades = get_grades()

        gender = get_choice("Введіть стать ('чоловік' або 'жінка'): ", ["чоловік", "жінка"])

        admission = get_choice("Допуск до сесії ('так' або 'ні'): ", ["так", "ні"])

        add_student(name, group, course, grades, gender, admission)

    elif choice == "3":
        sort_students_by_group()

    elif choice == "4":
        pib = input("Введіть прізвище, ім'я та по батькові студента: ")
        remove_student(pib)

    elif choice == "5":
        print("Завершення програми.")
        break

    else:
        print("Помилка: введено некоректний варіант.")

# TODO: Реалізувати зміну даних
def edit_students(data):
    pass  # Реалізувати зміну введених даних конкретного студента

# TODO: Додати перевірку, щоб уникнути пустих значень при введенні даних
def validate_input(data):
    pass  # Реалізувати окрему фунцію і додати її виклик при введені даних студента

# TODO: Додати сортування по допуск/не допуск до сесії
def sort_students_by_admission():
    pass  # Реалізувати як окрему фунцію і її виклик

# Завершення коду студента групи КНдн-35с Дігтярьова Дмитра Вікторовича